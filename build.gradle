buildscript {
    ext {
        springBootVersion = '2.1.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.tomlouiskeller'
version = '0.0.4-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_10

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    // Web
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'

    // MongoDB
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb'
//    compile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.0.3'

    // Other
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'org.projectlombok', name: 'lombok'

    // Test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.0.3'
}

idea {
    module {
        // Set directory for output coming from intellij
        outputDir file('build/classes/java/main')
        testOutputDir file('build/classes/java/test')
        // Download source and doc
        downloadJavadoc = true
        downloadSources = true
    }
}

// Export test coverage
jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

